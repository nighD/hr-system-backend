{"version":3,"sources":["../../controllers/TeamController.js"],"names":["util","Util","TeamController","req","res","TeamService","getAllTeams","allTeams","length","setSuccess","send","setError","newTeam","body","UserService","addTeam","createdTeam","message","alteredTeam","id","params","updateTeam","console","log","getATeam","theTeam","getATeamManager","Number","deleteTeam","teamToDelete"],"mappings":"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","sourcesContent":["import TeamService from '../services/TeamService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\n\nexport default class TeamController {\n  static async getAllTeams(req, res) {\n    try {\n      const allTeams = await TeamService.getAllTeams();\n      if (allTeams.length > 0) {\n        util.setSuccess(200, 'Teams retrieved', allTeams);\n      } else {\n        util.setSuccess(200, 'No Team found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addTeam(req, res) {\n    // if (!req.body.emp_lname || !req.body.emp_fname || !req.body.emp_gender || !req.body.emp_fname || !req.body.emp_gender) {\n    //   util.setError(400, 'Please provide complete details');\n    //   return util.send(res);\n    // }\n    const newTeam = req.body;\n    try {\n      const createdTeam = await UserService.addTeam(newTeam);\n      util.setSuccess(201, 'Team Added!', createdTeam);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatedTeam(req, res) {\n    const alteredTeam = req.body;\n    const  id  = req.params.id;\n    if (!(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updateTeam = await TeamService.updateTeam(id, alteredTeam);\n      if (!updateTeam) {\n        util.setError(404, `Cannot find Team with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Team updated', updateTeam);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getATeam(req, res) {\n    const  id  = req.params.id;\n    console.log(req.params.id);\n    console.log(id);\n    if (!(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const theTeam = await TeamService.getATeam(id);\n\n      if (!theTeam) {\n        util.setError(404, `Cannot find Team with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found User', theTeam);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n  static async getATeamManager(req, res) {\n    const  id  = req.params.id;\n    if (!(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const theTeam = await TeamService.getATeamManager(id);\n\n      if (!theTeam) {\n        util.setError(404, `Cannot find Team Manager with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found User', theTeam);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n  static async deleteTeam(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const teamToDelete = await TeamService.deleteTeam(id);\n\n      if (teamToDelete) {\n        util.setSuccess(200, 'Team deleted');\n      } else {\n        util.setError(404, `Team with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n"],"file":"TeamController.js"}