{"version":3,"sources":["../../controllers/UserController.js"],"names":["util","Util","UserController","req","res","UserService","getAllUsers","allUsers","length","setSuccess","send","setError","newUser","body","addUser","createdUser","message","alteredUser","id","params","updateUser","console","log","getAUser","theUser","getManagers"],"mappings":"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;;;;;;;;;;;;;;QAGX;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;KAEF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import UserService from '../services/UserService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\n\nexport default class UserController {\n  static async getAllUsers(req, res) {\n    try {\n      const allUsers = await UserService.getAllUsers();\n      if (allUsers.length > 0) {\n        util.setSuccess(200, 'Users retrieved', allUsers);\n      } else {\n        util.setSuccess(200, 'No User found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async addUser(req, res) {\n    // if (!req.body.emp_lname || !req.body.emp_fname || !req.body.emp_gender || !req.body.emp_fname || !req.body.emp_gender) {\n    //   util.setError(400, 'Please provide complete details');\n    //   return util.send(res);\n    // }\n    const newUser = req.body;\n    try {\n      const createdUser = await UserService.addUser(newUser);\n      util.setSuccess(201, 'Book Added!', createdUser);\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatedUser(req, res) {\n    const alteredUser = req.body;\n    const { id } = req.params.id;\n    if (!(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updateUser = await UserService.updateUser(id, alteredUser);\n      if (!updateUser) {\n        util.setError(404, `Cannot find User with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Book updated', updateUser);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAUser(req, res) {\n    const  id  = req.params.id;\n    console.log(req.params.id);\n    console.log(id);\n    if (!(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const theUser = await UserService.getAUser(id);\n\n      if (!theUser) {\n        util.setError(404, `Cannot find User with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found User', theUser);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n  static async getManagers(req, res) {\n    // const  id  = req.params.id;\n    // if (!(id)) {\n    //   util.setError(400, 'Please input a valid numeric value');\n    //   return util.send(res);\n    // }\n\n    try {\n      const theUser = await UserService.getManagers();\n\n      if (!theUser) {\n        util.setError(404, `Cannot find managers`);\n      } else {\n        util.setSuccess(200, 'Found Managers', theUser);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n  // static async deleteBook(req, res) {\n  //   const { id } = req.params;\n\n  //   if (!Number(id)) {\n  //     util.setError(400, 'Please provide a numeric value');\n  //     return util.send(res);\n  //   }\n\n  //   try {\n  //     const bookToDelete = await BookService.deleteBook(id);\n\n  //     if (bookToDelete) {\n  //       util.setSuccess(200, 'Book deleted');\n  //     } else {\n  //       util.setError(404, `Book with the id ${id} cannot be found`);\n  //     }\n  //     return util.send(res);\n  //   } catch (error) {\n  //     util.setError(400, error);\n  //     return util.send(res);\n  //   }\n  // }\n}\n// const User_Info = require('../models').User_Info;\n// const Team_Info= require('../models').Team_Info;\n\n// module.exports = {\n//   list(req, res) {\n//     return User_Info\n//       .findAll()\n//       .then((users) => res.status(200).send(users))\n//       .catch((error) => { res.status(400).send(error); });\n//   },\n\n//   getById(req, res) {\n//     return User_Info\n//       .findAll({\n//         where: {\n//           emp_uid: req.params.id\n//         }}\n//       )\n//       .then((user) => {\n//         if (!user) {\n//           return res.status(404).send({\n//             message: 'user Not Found',\n//           });\n//         }\n//         return res.status(200).send(user);\n//       })\n//       .catch((error) => res.status(400).send(error));\n//   },\n\n//   add(req, res) {\n//     return User_Info\n//       .create({\n//         emp_lname: req.body.emp_lname,\n//         emp_fname: req.body.emp_fname,\n//         emp_gender: req.body.emp_gender,\n//         emp_email: req.body.emp_email,\n//         emp_avatar: req.body.emp_avatar,\n//         emp_role: req.body.emp_role,\n//         teamid: req.body.teamid,\n//         emp_status: req.body.emp_status,\n//         emp_dob: req.body.emp_dob,\n//         emp_pass: req.body.emp_pass,\n//         emp_street: req.body.emp_street,\n//         emp_phone: req.body.emp_phone,\n//         emp_city: req.body.emp_city,\n//         emp_postal: req.body.emp_postal,\n//         emp_country: req.body.emp_country,\n//         emp_uid: req.body.emp_uid\n//       })\n//       .then((user) => {\n//           res.status(201).send(user)},\n//           // console.log(user)\n\n//       )\n//       .catch((error) => res.status(400).send(error));\n//   },\n\n//   update(req, res) {\n//     return User_Info\n//       .update(\n//         {\n//           emp_lname: req.body.emp_lname,\n//           emp_fname: req.body.emp_fname,\n//           emp_gender: req.body.emp_gender,\n//           emp_email: req.body.emp_email,\n//           emp_avatar: req.body.emp_avatar,\n//           emp_role: req.body.emp_role,\n//           teamid: req.body.teamid,\n//           emp_status: req.body.emp_status,\n//           emp_dob: req.body.emp_dob,\n//           emp_pass: req.body.emp_pass,\n//           emp_street: req.body.emp_street,\n//           emp_phone: req.body.emp_phone,\n//           emp_city: req.body.emp_city,\n//           emp_postal: req.body.emp_postal,\n//           emp_country: req.body.emp_country,\n//           emp_uid: req.body.emp_uid\n//         },{\n//         where: {\n//           emp_uid: req.params.id\n//         }\n//       }\n//       )\n//       .then(user => {\n//         console.log(user.emp_fname);\n//         res.status(200).send(user);\n//       })\n//       .catch((error) => res.status(400).send(error));\n//   },\n\n//   delete(req, res) {\n//     return User_Info\n//       .findByPk(req.params.id)\n//       .then(user => {\n//         if (!user) {\n//           return res.status(400).send({\n//             message: 'user Not Found',\n//           });\n//         }\n//         return user\n//           .destroy()\n//           .then(() => res.status(204).send())\n//           .catch((error) => res.status(400).send(error));\n//       })\n//       .catch((error) => res.status(400).send(error));\n//   },\n// };"],"file":"UserController.js"}