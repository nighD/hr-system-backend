{"version":3,"sources":["../../services/TeamService.js"],"names":["database","require","TeamService","Team_Info","findAll","include","model","User_Info","newTeam","create","id","updateTeam","findOne","where","TeamToUpdate","update","updateUser","theTeam","emp_role","TeamToDelete","destroy","deletedTeam"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;IACOC,W;;;;;;;;;;;;;;;;;;;uBAGYF,QAAQ,CAACG,SAAT,CAAmBC,OAAnB,CAA2B;AACtCC,kBAAAA,OAAO,EAAE,CAAC;AACNC,oBAAAA,KAAK,EAAEN,QAAQ,CAACO;AADV,mBAAD;AAD6B,iBAA3B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAUIC,O;;;;;;;uBAEJR,QAAQ,CAACG,SAAT,CAAmBM,MAAnB,CAA0BD,OAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMOE,E,EAAIC,W;;;;;;;;uBAEGX,QAAQ,CAACG,SAAT,CAAmBS,OAAnB,CAA2B;AACpDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEA;AAAN;AAD6C,iBAA3B,C;;;AAArBI,gBAAAA,Y;;qBAIFA,Y;;;;;;uBACId,QAAQ,CAACG,SAAT,CAAmBY,MAAnB,CAA0BJ,WAA1B,EAAsC;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEA;AAAN;AAAT,iBAAtC,C;;;kDAECM,U;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMWN,E;;;;;;;;uBAEIV,QAAQ,CAACG,SAAT,CAAmBC,OAAnB,CAA2B;AAC/CS,kBAAAA,KAAK,EAAE;AAACH,oBAAAA,EAAE,EAAEA;AAAL,mBADwC;AAE/CL,kBAAAA,OAAO,EAAE,CAAC;AACNC,oBAAAA,KAAK,EAAEN,QAAQ,CAACO;AADV,mBAAD;AAFsC,iBAA3B,C;;;AAAhBU,gBAAAA,O;kDAQCA,O;;;;;;;;;;;;;;;;;;;;;;;;;;qDAKkBP,E;;;;;;;;uBAEHV,QAAQ,CAACG,SAAT,CAAmBC,OAAnB,CAA2B;AAC/CS,kBAAAA,KAAK,EAAE;AAACH,oBAAAA,EAAE,EAAEA;AAAL,mBADwC;AAE/CL,kBAAAA,OAAO,EAAE,CAAC;AACNC,oBAAAA,KAAK,EAAEN,QAAQ,CAACO,SADV;AAENM,oBAAAA,KAAK,EAAE;AACHK,sBAAAA,QAAQ,EAAC;AADN;AAFD,mBAAD;AAFsC,iBAA3B,C;;;AAAhBD,gBAAAA,O;kDAWCA,O;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMaP,E;;;;;;;;uBAEOV,QAAQ,CAACG,SAAT,CAAmBS,OAAnB,CAA2B;AAAEC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEA;AAAN;AAAT,iBAA3B,C;;;AAArBS,gBAAAA,Y;;qBAEFA,Y;;;;;;uBACwBnB,QAAQ,CAACG,SAAT,CAAmBiB,OAAnB,CAA2B;AACnDP,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEA;AAAN;AAD4C,iBAA3B,C;;;AAApBW,gBAAAA,W;kDAGCA,W;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;;eAMEnB,W","sourcesContent":["// import database from '../src/models';\n// const User_Info = require('../models').User_Info;\nvar database = require('../models');\n class TeamService {\n  static async getAllTeams() {\n    try {\n      return await database.Team_Info.findAll({\n        include: [{\n            model: database.User_Info\n          }]\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async addTeam(newTeam) {\n    try {\n      return await database.Team_Info.create(newTeam);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async updateTeam(id, updateTeam) {\n    try {\n      const TeamToUpdate = await database.Team_Info.findOne({\n        where: { id: id }\n      });\n\n      if (TeamToUpdate) {\n        await database.Team_Info.update(updateTeam, { where: { id: id } });\n\n        return updateUser;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getATeam(id) {\n    try {\n      const theTeam = await database.Team_Info.findAll({\n        where: {id: id},\n        include: [{\n            model: database.User_Info\n          }]\n      \n      });\n\n      return theTeam;\n    } catch (error) {\n      throw error;\n    }\n  }\n  static async getATeamManager(id) {\n    try {\n      const theTeam = await database.Team_Info.findAll({\n        where: {id: id},\n        include: [{\n            model: database.User_Info,\n            where: {\n                emp_role:'manager'\n            }\n          }]\n      \n      });\n\n      return theTeam;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async deleteTeam(id) {\n    try {\n      const TeamToDelete = await database.Team_Info.findOne({ where: { id: id } });\n\n      if (TeamToDelete) {\n        const deletedTeam = await database.Team_Info.destroy({\n          where: { id: id }\n        });\n        return deletedTeam;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\nexport default TeamService;\n"],"file":"TeamService.js"}