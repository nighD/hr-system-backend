{"version":3,"sources":["../../workers/notificationsWorker.js"],"names":["moment","require","eventsController","events","list","checkAppointment","date","event","Math","round","duration","start_time","diff","asMinutes","notification","condition","requiresNotification","searchDate","Date","promise1","then","value","JSON","parse","stringify","filter","console","log","Promise","resolve","reject","findAll","notificationWorkerFactory","run","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BE,MAAnD;;AACA,IAAMA,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBE,MAApC;;AACA,IAAIC,IAAI,GAAG,EAAX;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,IAAV,EAAeC,KAAf,EAAqB;AAC1C,SAAOC,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACU,QAAP,CAAgBV,MAAM,CAACO,KAAK,CAACI,UAAP,CAAN,CACjCC,IADiC,CAC5BZ,MAAM,CAACM,IAAD,CADsB,CAAhB,EAElBO,SAFkB,EAAX,MAEUN,KAAK,CAACO,YAFvB;AAGH,CAJD;;AAKA,IAAIC,SAAS,GAAG,EAAhB;;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAW;AACpC;AACA,MAAMC,UAAU,GAAG,IAAIC,IAAJ,EAAnB;AACAC,EAAAA,QAAQ,CAACC,IAAT,CAAc,UAASC,KAAT,EAAgB;AAC1BjB,IAAAA,IAAI,GAAGkB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,KAAf,CAAX,CAAP,CAD0B,CAE1B;AACA;AACD,GAJH,EAHoC,CAQpC;AACA;AACA;;AACAN,EAAAA,SAAS,GAAGX,IAAI,CAACqB,MAAL,CAAY,UAASlB,KAAT,EAAgB;AACpC,WAAOF,gBAAgB,CAACY,UAAD,EAAYV,KAAZ,CAAvB;AACH,GAFW,CAAZ;AAGAmB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ,EAdoC,CAepC;AACH,CAhBD;;AAiBA,IAAII,QAAQ,GAAG,IAAIS,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACjD;AACAD,EAAAA,OAAO,CAAC1B,MAAM,CAAC4B,OAAP,EAAD,CAAP;AACD,CAHY,CAAf,C,CAIA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAW;AAC3C,SAAO;AACLC,IAAAA,GAAG,EAAE,eAAW;AACdjB,MAAAA,oBAAoB;AACrB;AAHI,GAAP;AAKD,CAND;;AAQAkB,MAAM,CAACC,OAAP,GAAiBH,yBAAyB,EAA1C","sourcesContent":["'use strict';\n\nconst moment = require('moment');\nconst eventsController = require('../controllers').events;\nconst events = require('../models').events;\nlet list = [];\nconst checkAppointment = function (date,event){\n    return Math.round(moment.duration(moment(event.start_time)\n    .diff(moment(date))\n  ).asMinutes()) === event.notification;\n}\nlet condition = []\nconst requiresNotification = function (){\n    // console.log(\"Yeah Yeah\")\n    const searchDate = new Date();\n    promise1.then(function(value) {\n        list = JSON.parse(JSON.stringify(value))\n        // console.log(list)\n        // expected output: \"Success!\"\n      });\n    // list.map(event => {\n    //     console.log(checkAppointment(searchDate,event))\n    // });\n    condition = list.filter(function(event) {\n        return checkAppointment(searchDate,event);\n    });\n    console.log(condition)\n    // console.log(events.findAll())\n};\nvar promise1 = new Promise(function(resolve, reject) {\n    // resolve('Success!');\n    resolve(events.findAll());\n  });\n//   promise1.then(function(value) {\n//     console.log(value);\n//     // expected output: \"Success!\"\n//   });\n// const Appointment = require('../models/appointment');\n\nconst notificationWorkerFactory = function() {\n  return {\n    run: function() {\n      requiresNotification();\n    },\n  };\n};\n\nmodule.exports = notificationWorkerFactory();"],"file":"notificationsWorker.js"}